$date
	Sat Dec  9 11:14:13 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module Instruction_Register_tb $end
$var wire 4 ! instruction [3:0] $end
$var wire 4 " data [3:0] $end
$var reg 1 # CLK $end
$var reg 1 $ CLR $end
$var reg 1 % E_I_bar $end
$var reg 1 & L_I_bar $end
$var reg 8 ' bus_input [7:0] $end
$scope module DUT $end
$var wire 1 # CLK $end
$var wire 1 $ CLR $end
$var wire 1 % E_I_bar $end
$var wire 1 & L_I_bar $end
$var wire 8 ( bus_input [7:0] $end
$var wire 1 ) gnd $end
$var wire 4 * instruction [3:0] $end
$var wire 4 + data [3:0] $end
$var wire 4 , bus_input_second_nibble [3:0] $end
$var wire 4 - bus_input_first_nibble [3:0] $end
$scope module register_1 $end
$var wire 1 # CLK $end
$var wire 1 ) CLR $end
$var wire 4 . D [4:1] $end
$var wire 2 / G_bar [2:1] $end
$var wire 1 % M $end
$var wire 1 % N $end
$var wire 4 0 Q [4:1] $end
$var reg 4 1 Q_store [4:1] $end
$upscope $end
$scope module register_2 $end
$var wire 1 # CLK $end
$var wire 1 $ CLR $end
$var wire 4 2 D [4:1] $end
$var wire 2 3 G_bar [2:1] $end
$var wire 1 ) M $end
$var wire 1 ) N $end
$var wire 4 4 Q [4:1] $end
$var reg 4 5 Q_store [4:1] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx 5
bx 4
b11 3
b1010 2
bx 1
bz 0
b11 /
b1100 .
b1100 -
b1010 ,
bz +
bx *
0)
b10101100 (
b10101100 '
1&
1%
0$
0#
bz "
bx !
$end
#1
b0 !
b0 *
b0 4
b0 5
1$
1#
#2
0$
0#
#3
b1010 !
b1010 *
b1010 4
b1100 1
b1010 5
b0 /
b0 3
0&
1#
#4
0#
#5
b1100 "
b1100 +
b1100 0
1#
0%
#6
0#
#7
b1101 "
b1101 +
b1101 0
b11 !
b11 *
b11 4
b1101 1
b11 5
b11 ,
b11 2
b1101 -
b1101 .
1#
b111101 '
b111101 (
#8
0#
#9
1#
b11 /
b11 3
1&
#10
0#
#11
b1111 ,
b1111 2
b1111 -
b1111 .
1#
b11111111 '
b11111111 (
#12
0#
#13
bz "
bz +
bz 0
1#
1%
#14
0#
#15
1#
#16
b0 !
b0 *
b0 4
b0 5
0#
1$
#17
1#
0$
#18
0#
#19
1#
#20
0#
#21
1#
#22
0#
#23
1#
